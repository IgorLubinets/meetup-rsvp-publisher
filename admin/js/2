( function($) {
	$(document).ready( function() {

	//Shortcode object 
	var shortCode = new Object; 
	shortCode['allStatus'] = $('input[name="allStatus"]:checked').val();
	console.log('INITIAL: CHeCKBOX SET TO: ' + shortCode['allStatus'] );

	//Backbone
	var ShortCodeModel = Backbone.Model.extend({
		initialize: function(){
			this.set('excludeGroups', {})		
		}	
	});
	var readyShortCode = new ShortCodeModel({ 
		allStatus: $('input[name="allStatus"]:checked').val(),
	});
	console.log('Backbone: initial checkbox set to: ' + readyShortCode.get('allStatus') );

	//	var ShortCodeView = Backbone.View({model: readyShortCode});

	var item_length = $('.meetup-slides>div').length;
	console.log('Number of Slides: ' + item_length);

	$('.meetup-slides').slick({
  			centerPadding: '60px',
	  		slidesToShow: 3,
			initialSlide: 1,
  			arrows: false,
			infinite: false,
			centerMode: true,
			responsive: [

  			{
	    		breakpoint: 1360,
      		settings: {
        			arrows: false,
        			centerPadding: '40px',
        			slidesToShow: 2 
		    	}
    		}, { 
				breakpoint: 600,
      		settings: {
        			arrows: false,
        			centerMode: false,
        			centerPadding: '40px',
        			slidesToShow: 1.25,
					initialSlide: 0 
      		}
    		}

  			]
		});
	//	$('.meetup-slides').slick('reinit');
	//	$(window).trigger('resize');

		$('#prevSlide').click( function() {
			$('.meetup-slides').slick("slickPrev");
		});
		$('#nextSlide').click( function() {
			$('.meetup-slides').slick("slickNext");
			console.log( $('.meetup-slides').slick('slickCurrentSlide') );
		});

	//Duplicate, to try for the thickbox
	$('div[class^="meetup-rsvp-slides-"], .meetup-admin-preview-slides').slick({
	  		slidesToShow: 2,
  			arrows: false,
			infinite: true,
			centerMode: true,
	});
	
		//Hack the slider
		//Slick slider will not show if the element is hidden.  In this case
		//	the modal is hidden, so slick cannot calculate the proper dimensions.
		//		When you start dragging then it appears.  Otherwise width set to zero.
		//		This seems to work, need more testing!
		$('#show-preview').click( function() {
			$(window).trigger('resize');
		//	$('.meetup-admin-preview-slides').slick('unslick').slick('reinit');			
		//		console.log( 'Shortcode: ' + $('#shortCode').val() );
		
		//testing admin-ajax.php 
			var shortCodeValue = $('#shortCode').val();	
			var data = {
				action: 'webilect_rsvp_publish_ajax',
				shortcode: shortCodeValue,
			};	
			//console.log( 'Will Be Passing: ' + $('#shortCode').val() );
			
			$.post('http://192.241.196.100/wp-admin/admin-ajax.php', data, function( response ) {
				$('#shortcode-preview-slides').html(response);	
				//		$('.meetup-admin-preview-slides').slick('reinit');
				console.log( response );

			//REPETITION: move into a function!
			// or find a way to re-run on new html structure	
			$('div[class^="meetup-rsvp-slides-"]').slick({
		  		slidesToShow: 2,
  				arrows: false,
				infinite: true,
				centerMode: true,
			});
			//END REPETITION	

			});
		});

		//handle visibility toggle buttons
		$('span[id^="make-visible-"]').click( function() {
			console.log('Clicked the eye');	
			$(this).css( 'display', 'none' );
			$(this).parent('div').find('span[id^="make-invisible-"]').css('display', 'block');		
			//$(this).closest('.meetup-item').css('opacity', '.35');
			var currentMeetupItem = $(this).closest('.meetup-item');
			$(this).closest('.meetup-item').addClass('grayout');
			console.log('Current Meetup Item ID: ' + currentMeetupItem.attr('id') );
			var currentGroups = _.clone( readyShortCode.get('excludeGroups') );
			currentGroups[ currentMeetupItem.attr('id') ] = true;
			console.log( 'Contents of currentGroups array before model ' + JSON.stringify(currentGroups) );
			readyShortCode.set( 'excludeGroups', currentGroups );
		
			console.log( 'Added item: ' + JSON.stringify(readyShortCode.get('excludeGroups'))  );		

		});
		$('span[id^="make-invisible-"]').click( function() {
			$(this).css( 'display', 'none' );
		
//			$(this).closest('.meetup-item').css( 'opacity', '1' );
			$(this).closest('.meetup-item').removeClass('grayout');
			$(this).parent('div').find('span[id^="make-visible-"]').css('display', 'block');		

			var currentMeetupItem = $(this).closest('.meetup-item');
			console.log('Current Meetup Item ID: ' + currentMeetupItem.attr('id') );
			
			var currentGroups = _.clone( readyShortCode.get('excludeGroups') );
			currentGroups[ currentMeetupItem.attr('id') ] = false;
			console.log( 'Contents of currentGroups array before model ' + JSON.stringify(currentGroups) );
			readyShortCode.set( 'excludeGroups', currentGroups );
		
			console.log( 'Added item: ' + JSON.stringify(readyShortCode.get('excludeGroups'))  );		

		});


		//Code to handle ShowAll HideAll radio buttons 
		/////////////////////////////////////////////////////////////////////
		$('#allStatusShow').click( function() {
			if( shortCode['allStatus'] !== 'show' ) {
				toggleEye();
				shortCode['allStatus'] = 'show';
				updateShortCodeString();
			}
			
		});	
		$('#allStatusHide').click( function() {
			if( shortCode['allStatus'] !== 'hide' ) {
				toggleEye();
				shortCode['allStatus'] = 'hide';	
				updateShortCodeString();
			}
		});	

		function flipEye( flag ) {
			$('.meetup-item').each( function() {
				if( flag === true ) {
					$('span[id=^"make-invisible-"]', this).css('display', 'none');
					$('span[id=^make-visible-"]', this).css('display', 'block');
					$('.meetup-item').removeClass('grayout');
				} else {
					$('span[id=^"make-invisible-"]', this).css('display', 'block');
					$('span[id=^make-visible-"]', this).css('display', 'none');
					$('.meetup-item').addClass('grayout');
				}
			});

		}
	
		function toggleEye() {
			$('.meetup-item').each( function() {
				if( $(this).hasClass('grayout') ) {
					$('span[id^="make-visible-"]', this).css('display', 'block');
					$('span[id^="make-invisible-"]', this).css('display', 'none');
					$(this).removeClass('grayout');
				} else {
					$('span[id^="make-invisible-"]', this).css('display', 'block');
					$('span[id^="make-visible-"]', this).css('display', 'none');
					$(this).addClass('grayout');
				}
			});	
			$(window).trigger('resize');
		}

		function updateShortCodeString() {
			var showHide = ( shortCode['allStatus'] === 'show' ) ? 'show="all"' : 'hide="all"'; 

			console.log( '[meetup-rsvps-publish ' + showHide + ' display="slider"/]');		
		}

		/////////////////////////////////////////////////////////////////////
		//End Code to handle creation of the Shortcode string
		
	
	});
})(jQuery);
